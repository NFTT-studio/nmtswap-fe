{"version":3,"sources":["contractUtil.js","App.js","reportWebVitals.js","index.js"],"names":["SWAP_ADDRESS","NMT_ADDRESS","ContractUtil","connect","isNMTAllowanceEnough","owner","amount","a","allowanceAbi","contract","ethers","Contract","provider","allowance","parseInt","utils","formatEther","isNMTBalanceEnough","NMTBalance","balanceOfabi","balanceOf","balance","NMTapproveAll","approveAbi","signer","getSigner","approve","tx","erc20toNative","nativeAddress","swapAbi","parseUnits","toString","this","providers","Web3Provider","Transition","React","forwardRef","props","ref","Slide","direction","App","_isMainChain","state","chainId","requestAccount","request","method","accounts","handleAccountsChanged","_localSave","key","value","localStorage","setItem","currentAccount","_localGet","getItem","_localRemove","removeItem","handleApprove","contractUtil","setState","approveTx","hash","approveDialogOpen","_checkApproveTx","handleApproveDialogClose","console","error","waitForTransaction","then","txr","status","alertMessage","approveSuccess","_handleSwithChain","params","info","_handleConnectClick","handleChainChanged","_chainId","window","location","reload","nmtBalance","handleAmountChange","event","swapAmount","target","handleNativeChange","targetNativeAddress","_checkSwapTx","swapTx","commitSuccess","handleSwap","checkAddressChecksum","base58Decode","isValid","e","_handleClearApproveTx","_handleClearSwapTx","isInstallMetaMask","detectEthereumProvider","on","log","classes","Fragment","Container","maxWidth","className","root","Card","card","variant","Grid","container","spacing","style_flex_center","href","rel","style","textDecoration","Button","size","color","onClick","item","xs","Typography","paddingBottom","TextField","disabled","fullWidth","id","label","onChange","placeholder","type","CircularProgress","substring","margin","AppBar","position","top","bottom","Toolbar","noWrap","flexGrow","align","Link","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","TransitionComponent","keepMounted","DialogTitle","Component","withStyles","theme","marginTop","padding","display","justifyContent","alignItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa80bb0f.chunk.js","sourcesContent":["import { ethers } from \"ethers\"\n\nconst SWAP_ADDRESS =\"0xb5d65ff6ee3a366adafac882b2737a37dc73b66a\"\nconst NMT_ADDRESS =\"0xd81b71cBb89B2800CDb000AA277Dc1491dc923C3\"\n\nclass   ContractUtil{\n    provider\n    // contract\n    constructor(connect) {\n        this.provider = new ethers.providers.Web3Provider(connect,\"any\")\n        // this.contract = new ethers.Contract(SWAP_ADDRESS,this.abi,this.provider);\n    }\n\n    isNMTAllowanceEnough=async (owner,amount)=>{\n        const allowanceAbi = [\n            \"function allowance(address owner, address spender) external view returns (uint256)\"\n        ];\n        const contract = new ethers.Contract(NMT_ADDRESS, allowanceAbi, this.provider);\n        const allowance = await contract.allowance(owner,SWAP_ADDRESS);\n        return parseInt(ethers.utils.formatEther( allowance)) >parseInt( amount);\n    }\n\n    isNMTBalanceEnough=async (owner,amount)=>{\n\n        return (await this.NMTBalance(owner)) >= parseInt( amount);\n    }\n\n    NMTBalance=async (owner)=>{\n        const balanceOfabi = [\n            \"function balanceOf(address) view returns (uint)\"\n        ];\n        const contract = new ethers.Contract(NMT_ADDRESS, balanceOfabi, this.provider);\n        const balance = await contract.balanceOf(owner);\n        return parseInt(ethers.utils.formatEther( balance))\n    }\n\n    NMTapproveAll=async()=>{\n        const approveAbi = [\n            \"function approve(address spender, uint256 amount) external returns (bool)\"\n        ];\n        const contract = new ethers.Contract(NMT_ADDRESS, approveAbi, this.provider);\n        const signer = this.provider.getSigner()\n        let tx = await contract.connect(signer).approve(SWAP_ADDRESS, \"10000000000000000000000000\");\n        return tx;\n    }\n\n    erc20toNative=async(nativeAddress,amount)=>{\n\n        const swapAbi = [\n            \"function erc20toNative(string memory nativeAddress,uint256 amount) public returns (bool)\"\n        ];\n        const contract = new ethers.Contract(SWAP_ADDRESS, swapAbi, this.provider);\n        const signer = this.provider.getSigner();\n\n        let tx = await contract.connect(signer).erc20toNative(nativeAddress,ethers.utils.parseUnits(amount).toString());\n        return tx;\n    }\n}\nexport default ContractUtil;","import React from 'react'\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ContractUtil from \"./contractUtil\";\nimport {\n    Button,\n    TextField,\n    CircularProgress,\n    DialogTitle,\n    DialogContentText,\n    DialogContent,\n    DialogActions,\n    Slide,\n    Card,\n\n    AppBar,\n    Toolbar,\n    Link,\n    Dialog, Container, Grid,  Typography\n\n} from '@material-ui/core';\nimport {withStyles} from \"@material-ui/core\";\nimport { checkAddressChecksum, base58Decode} from \"@polkadot/util-crypto\";\n\n\n\n\nconst useStyles = theme=>({\n    root: {\n            marginTop:theme.spacing(8)\n    },\n    card:{\n        padding: theme.spacing(4)\n    },\n    style_flex_center:{\n        display:\"flex\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n        // marginTop:theme.spacing(4)\n    }\n});\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass App extends React.Component {\n    provider\n    contractUtil\n    constructor() {\n        super();\n        this.state = {\n            currentAccount:\"\",\n            targetNativeAddress:\"\",\n            swapAmount:0,\n            nmtBalance:0,\n            alertMessage:\"\",\n            approveDialogOpen:false,\n\n            chainId:\"0x1\",\n            isInstallMetaMask:true,\n            approveTx:null,\n            swapTx:null,\n            commitSuccess:false,\n            approveSuccess:false\n\n        };\n    }\n\n    _isMainChain=()=>{\n        return this.state.chainId === \"0x1\";\n    }\n    async componentDidMount(){\n        this.provider = await detectEthereumProvider();\n\n        if (this.provider) {\n            this.contractUtil = new ContractUtil(this.provider);\n            this.provider.on('chainChanged', this.handleChainChanged);\n            this.provider.on('accountsChanged',this.handleAccountsChanged);\n            this.setState({chainId:  await this.provider.request({ method: 'eth_chainId' })});\n            await this.requestAccount();\n\n            if(this._isMainChain()) {\n                console.info(this.state.currentAccount)\n                if (this.state.currentAccount) {\n                    this.setState({approveTx: this._localGet(\"approveTx\"),swapTx: this._localGet(\"swapTx\")})\n\n                this._checkApproveTx();\n                this._checkSwapTx();\n                let nmtBalance = await this.contractUtil.NMTBalance(this.state.currentAccount);\n                this.setState({nmtBalance: nmtBalance});\n                }\n            }\n        } else {\n            this.setState({isInstallMetaMask:false})\n            console.log('Please install MetaMask!');\n        }\n    }\n    requestAccount = async ()=>{\n        let accounts = await this.provider.request({ method: 'eth_requestAccounts' });\n        await this.handleAccountsChanged(accounts);\n    }\n    _localSave=(key,value)=>{\n        localStorage.setItem(this.state.currentAccount + \"_\" + key,value);\n    }\n    _localGet=(key)=>{\n        return localStorage.getItem(this.state.currentAccount + \"_\" + key);\n    }\n    _localRemove=(key)=>{\n        return localStorage.removeItem(this.state.currentAccount + \"_\" + key);\n    }\n\n    handleApprove = async ()=>{\n\n        try{\n            var tx = await this.contractUtil.NMTapproveAll();\n            this.setState({approveTx:tx.hash,approveDialogOpen:false});\n            // tx.gt\n            this._localSave(\"approveTx\",tx.hash);\n            this._checkApproveTx();\n\n        }catch(err){\n            this.handleApproveDialogClose();\n            console.error(err);\n        }\n    }\n    handleApproveDialogClose = ()=>{\n        this.setState({approveDialogOpen:false});\n    }\n    _checkApproveTx = ()=>{\n        if(this.state.approveTx!==null) {\n            this.contractUtil.provider.waitForTransaction(this.state.approveTx, 1).then((txr) => {\n                if (txr.status === 0) {\n                    this.setState({alertMessage:\"Transaction Error, Please Check it\"});\n                }\n                this.setState({approveTx: null,approveSuccess:true});\n                this._localRemove(\"approveTx\");\n            });\n        }\n    }\n    _handleSwithChain = async() =>{\n        try {\n            await this.provider.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: '0x1' }],\n            });\n        } catch (switchError) {\n            console.info(switchError);\n        }\n    }\n    _handleConnectClick=async ()=>{\n        if(!this.provider){\n            this.setState({alertMessage:\"Please Install MetaMask First\"});\n            return;\n        }\n        if(!this._isMainChain()){\n            this.setState({alertMessage:\"Please Select Ethereum Main Network First\"})\n            return ;\n        }\n        this.requestAccount();\n    }\n    handleChainChanged=(_chainId)=> {\n        window.location.reload();\n        // this.setState({chainId:_chainId});\n    }\n    handleAccountsChanged=async (accounts)=>{\n        if(accounts[0]) {\n            this.setState({currentAccount: accounts[0]});\n            if(this._isMainChain()) {\n                let nmtBalance = await this.contractUtil.NMTBalance(this.state.currentAccount);\n                this.setState({nmtBalance: nmtBalance});\n            }\n        }else{\n            this.setState({currentAccount: \"\"});\n        }\n    }\n    handleAmountChange = async (event)=>{\n        this.setState({swapAmount:event.target.value})\n    }\n    handleNativeChange = async(event)=>{\n        this.setState({targetNativeAddress: event.target.value})\n    }\n\n    _checkSwapTx = ()=>{\n        if(this.state.swapTx!==null) {\n            this.contractUtil.provider.waitForTransaction(this.state.swapTx, 1).then((txr) => {\n                if (txr.status === 0) {\n                    this.alertMessage(\"Transaction Error, Please Check it\")\n                }\n                this.setState({swapTx: null,commitSuccess:true,approveSuccess:false});\n                this._localRemove(\"swapTx\");\n            });\n        }\n    }\n\n    handleSwap=async ()=>{\n        if(!this._isMainChain()){\n            this.setState({alertMessage:\"Please Select Ethereum Main Network First\"});\n            return ;\n        }\n        //地址对不对\n        let isValid;\n        try {\n            [isValid] = checkAddressChecksum(base58Decode(this.state.targetNativeAddress));\n        }catch (e) {\n            isValid = false;\n        }\n        if(!isValid){\n            this.setState({alertMessage:\"Please check you Native Address\"});\n            return;\n        }\n        if(this.state.swapAmount > this.state.nmtBalance){\n            this.setState({alertMessage:\"Insufficient NMT balance\"});\n            return;\n        }\n        if(! await this.contractUtil.isNMTAllowanceEnough(this.state.currentAccount,this.state.swapAmount)){\n            this.setState({approveDialogOpen:true})\n        }else{\n            try {\n                var swapTx =  await this.contractUtil.erc20toNative(this.state.targetNativeAddress,this.state.swapAmount);\n\n                this.setState({swapTx: swapTx.hash ,approveSuccess:false});\n                // tx.gt\n                this._localSave(\"swapTx\", swapTx.hash);\n                this._checkSwapTx();\n            }catch(err){\n                console.error(err);\n            }\n        }\n    }\n    _handleClearApproveTx = ()=>{\n\n        this._localRemove(\"approveTx\")\n        this.setState({approveTx:null});\n    }\n    _handleClearSwapTx = ()=>{\n        this._localRemove(\"swapTx\");\n        this.setState({swapTx:null});\n    }\n\n  render() {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n            <Container maxWidth=\"sm\" className={classes.root} >\n                <Card className={classes.card} variant=\"outlined\">\n                <Grid container spacing={3}>\n                    {!this.state.isInstallMetaMask &&\n                    <Grid container className={classes.style_flex_center}>\n                        <a href={\"https://metamask.io/download.html\"} rel={\"noreferrer\"} target=\"_blank\"\n                           style={{textDecoration: \"none\"}}>\n                            <Button\n                                variant=\"contained\"\n                                size={\"large\"}\n                                color={\"secondary\"}\n                            >Please click and install MetaMask!  https://metamask.io/download.html</Button>\n                        </a>\n                    </Grid>\n                    }\n                    {!this._isMainChain() &&\n                    <Grid container className={classes.style_flex_center}>\n                        <Button\n                            onClick={this._handleSwithChain}\n                            variant={\"contained\"}\n                            size={\"large\"}\n                            color={\"secondary\"}\n                        >\n                            Click And Switch Ethereum Main Network\n                        </Button>\n\n                    </Grid>\n                    }\n                    <Grid item xs={12} className={classes.style_flex_center}>\n                        <Typography variant={\"h5\"} style={{paddingBottom:\"20px\"}}>NMT ERC20 to Native</Typography>\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.style_flex_center}>\n                        {this.state.currentAccount!==\"\"?\n                            <TextField disabled={true} fullWidth  id=\"outlined-basic\" label=\"From ERC20 Address\" variant=\"outlined\" value={this.state.currentAccount}/>\n                            :<Button variant=\"contained\" color=\"secondary\" size={\"large\"} onClick={this._handleConnectClick}>Connect Wallet</Button>\n                        }\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField disabled={this.state.currentAccount===\"\"} id=\"outlined-basic\" fullWidth label=\"To Native Address\" variant=\"outlined\"\n                                   onChange={this.handleNativeChange}\n\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField disabled={this.state.currentAccount===\"\"} id=\"outlined-basic\" fullWidth label=\"Swap Amount\" variant=\"outlined\"\n                                   placeholder={this.state.nmtBalance.toString()}\n                                   type=\"number\"\n                                   onChange={this.handleAmountChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12} className={classes.style_flex_center}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleSwap} disabled={this.state.currentAccount===\"\" || this.state.swapAmount<1 || this.state.targetNativeAddress===\"\"  } size={\"large\"}>Swap</Button>\n                    </Grid>\n                    <Grid item xs={12} className={classes.style_flex_center}>\n                        {this.state.approveTx &&\n                        <Grid item xs={12} className={classes.style_flex_center}>\n                            <CircularProgress color={\"inherit\"} size={20}/>\n                            <br/>\n                            <Grid>&nbsp;&nbsp;Tx:&nbsp;&nbsp; <a target={\"_blank\"} rel=\"noreferrer\" href={\"https://etherscan.io/tx/\"+ this.state.approveTx} >{\n                                this.state.approveTx.substring(0,15)+\"...\"\n                            } </a></Grid>\n                            &nbsp;\n                            <Button size={\"small\"} variant={\"outlined\"}  onClick={this._handleClearApproveTx}>clear</Button>\n                        </Grid>\n                        }\n                        {this.state.swapTx &&\n                        <Grid item xs={12}  className={classes.style_flex_center}>\n                            <CircularProgress color={\"inherit\"} size={20}/><br/>\n                            <Grid>&nbsp;&nbsp;Tx:&nbsp;&nbsp;<a  rel=\"noreferrer\"  href={\"https://etherscan.io/tx/\"+ this.state.swapTx} target={\"_blank\"}> {\n                                this.state.swapTx.substring(0,15)+\"...\"\n                            }</a></Grid>&nbsp;\n                            <Button size={\"small\"} variant={\"outlined\"}  onClick={this._handleClearSwapTx}>clear</Button>\n                        </Grid>\n                        }\n\n                        {this.state.commitSuccess &&\n                        <Grid item xs={12}  className={classes.style_flex_center}>\n                            <Typography variant={\"h6\"} style={{color:\"red\"}} > Commit Success </Typography>\n                        </Grid>\n                        }\n\n                        {this.state.approveSuccess &&\n                        <Grid item xs={12}  className={classes.style_flex_center}>\n                            <Typography variant={\"h6\"}> Approve Success </Typography>\n                        </Grid>\n                        }\n\n                    </Grid>\n                </Grid>\n                </Card>\n                <br/>\n                <Card className={classes.card}>\n                    <Grid item xs={12} className={classes.style_flex_center} >\n                        <Typography variant={\"h6\"} style={{margin:\"15px\"}}> Contact us</Typography>\n                    </Grid>\n                    <Grid item xs={12} className={classes.style_flex_center}>\n                        <a rel=\"noreferrer\" href={\"https://t.me/NFTmart\"} target={\"_blank\"} >Telegram</a>\n                        &nbsp; &nbsp;&nbsp;&nbsp;\n                        <a rel=\"noreferrer\" href={\"https://twitter.com/NFTmartio\"} target={\"_blank\"}>Twitter</a>\n                    </Grid>\n                </Card>\n                <AppBar  position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\n                    <Toolbar >\n                        <Typography variant=\"subtitle2\" noWrap style={{flexGrow:1,margin:\"30px\"}} align={\"center\"} >\n                            Power by <Link  href={\"https://www.nftmart.io\"} color={\"inherit\"} target={\"_blank\"}>NFTMart.io</Link>\n                            &nbsp;&nbsp;  <Link href={\"https://etherscan.io/address/0xb5d65ff6ee3a366adafac882b2737a37dc73b66a#code\"} color={\"inherit\"} target={\"_blank\"}>NMTSwap Source Code</Link>\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n            </Container>\n      <Dialog\n          open={this.state.alertMessage!==\"\"}\n          onClose={()=>{this.setState({alertMessage:\"\"})}}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n      >\n          <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                  {this.state.alertMessage}\n              </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={()=>{this.setState({alertMessage:\"\"})}} color=\"primary\" autoFocus>\n                  Ok\n              </Button>\n          </DialogActions>\n      </Dialog>\n\n                <Dialog\n                    open={this.state.approveDialogOpen}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={this.handleApproveDialogClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-slide-title\">Approve Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Please approve NMTSwap contract transfer NMT.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleApproveDialogClose} color=\"primary\">\n                            Reject\n                        </Button>\n                        <Button onClick={this.handleApprove} color=\"primary\">\n                            Confirm\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n            </React.Fragment>\n    );\n  }\n\n}\n\nexport default withStyles(useStyles)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}